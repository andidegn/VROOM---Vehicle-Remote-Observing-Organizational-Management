.TH "Sim908_GSM" 3 "Sun Nov 30 2014" "Version v0.01" "VROOM" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Sim908_GSM \- 
.SS "Modules"

.in +1c
.ti -1c
.RI "\fBPrivate\fP"
.br
.ti -1c
.RI "\fBPublic\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBSIM908_init\fP (void)"
.br
.RI "\fIInitiates the SIM908 module\&. \fP"
.ti -1c
.RI "void \fBSIM908_start\fP (void)"
.br
.RI "\fIStarts the SIM908 module in following procedure\&. setup global settings -> setup GSM -> setup GPS -> enable GSM communication -> setup FTP\&. \fP"
.ti -1c
.RI "bool \fBSIM908_cmd\fP (const char *__cmd, bool __wait_for_ok)"
.br
.RI "\fIUsed for sending AT SET commands\&. \fP"
.ti -1c
.RI "void \fBset_MSD_data\fP (uint32_t *__UTC_sec, int32_t *__latitude, int32_t *__longitude, uint8_t *__course)"
.br
.RI "\fISets the MSD with relevant information given from GPS response\&. \fP"
.ti -1c
.RI "void \fBcall_PSAP\fP (void)"
.br
.RI "\fICalling Public-safety answering point\&. \fP"
.ti -1c
.RI "void \fBsend_MSD\fP (const char *__vroom_id)"
.br
.RI "\fISends MSD binary file to FTP server 1: Create filename: AT+FTPPUTNAME='<filename>' 2: Open bearer AT+SAPBR=1,1 3: Open FTP PUT session AT+FTPPUT=1 4: Set write data AT+FTPPUT=2,140 5: Write text (140 bytes) 6: End write session AT+FTPPUT=2,0 7: Close bearer AT+SAPBR=0,1\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
This is the driver for GSM/GPRS/GPS module sim908 
.SH "Function Documentation"
.PP 
.SS "void call_PSAP (void)"

.PP
Calling Public-safety answering point\&. 
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.PP
Definition at line 225 of file sim908\&.c\&.
.SS "void send_MSD (const char *__vroom_id)"

.PP
Sends MSD binary file to FTP server 1: Create filename: AT+FTPPUTNAME='<filename>' 2: Open bearer AT+SAPBR=1,1 3: Open FTP PUT session AT+FTPPUT=1 4: Set write data AT+FTPPUT=2,140 5: Write text (140 bytes) 6: End write session AT+FTPPUT=2,0 7: Close bearer AT+SAPBR=0,1\&. 
.PP
\fBParameters:\fP
.RS 4
\fIconst\fP char array with the VROOM ID (defined in \fBvroom_config\&.h\fP) 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.PP
Definition at line 246 of file sim908\&.c\&.
.SS "void set_MSD_data (uint32_t *__UTC_sec, int32_t *__latitude, int32_t *__longitude, uint8_t *__course)"

.PP
Sets the MSD with relevant information given from GPS response\&. 
.PP
\fBParameters:\fP
.RS 4
\fI*__UTC_sec\fP points to the timestamp in MSD structure __latitude points to the latitude in MSD structure __longitude points to the longitude in MSD structure __course points to the direction in MSD structure 
.RE
.PP
\fBReturns:\fP
.RS 4
void
.RE
.PP
\fBParameters:\fP
.RS 4
\fI*__UTC_sec\fP points to the timestamp in MSD structure __latitude points to the latitude in MSD structure __longitude points to the longitude in MSD structure __course points to the direction in MSD structure __IPV4 points to sp in MSD structure 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.PP
Definition at line 195 of file sim908\&.c\&.
.SS "bool SIM908_cmd (const char *__cmd, bool__wait_for_ok)"

.PP
Used for sending AT SET commands\&. 
.PP
\fBParameters:\fP
.RS 4
\fI*cmd\fP is the AT command as a string 
.RE
.PP
\fBReturns:\fP
.RS 4
true if successful else false 
.RE
.PP

.PP
Definition at line 169 of file sim908\&.c\&.
.SS "void SIM908_init (void)"

.PP
Initiates the SIM908 module\&. 
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP
\fBNote:\fP
.RS 4
UART0 is used to communicate with the module\&. 
.RE
.PP

.PP
Definition at line 97 of file sim908\&.c\&.
.SS "void SIM908_start (void)"

.PP
Starts the SIM908 module in following procedure\&. setup global settings -> setup GSM -> setup GPS -> enable GSM communication -> setup FTP\&. 
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.PP
Definition at line 132 of file sim908\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for VROOM from the source code\&.
