.TH "Public" 3 "Thu Dec 11 2014" "Version v0.01" "VROOM" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Public \- 
.SS "Modules"

.in +1c
.ti -1c
.RI "\fBControl Registers\fP"
.br
.RI "\fIDefines for all the control registers and the specific bits\&. \fP"
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBACC_POWER_MODE\fP { \fBACC_POWER_DOWN\fP = 0, \fBACC_NORMAL_MODE\fP = _BV(ACC_PM0), \fBACC_LOW_POWER_0_5\fP = _BV(ACC_PM1), \fBACC_LOW_POWER_1\fP = _BV(ACC_PM1) | _BV(ACC_PM0), \fBACC_LOW_POWER_2\fP = _BV(ACC_PM2), \fBACC_LOW_POWER_5\fP = _BV(ACC_PM2) | _BV(ACC_PM0), \fBACC_LOW_POWER_10\fP = _BV(ACC_PM2) | _BV(ACC_PM1) }"
.br
.RI "\fISpecifies the available power modes Output data rate frq  ACC_POWER_DOWN --- ACC_NORMAL_MODE ODR ACC_LOW_POWER_0_5 0\&.5 Hz ACC_LOW_POWER_1 1 Hz ACC_LOW_POWER_2 2 Hz ACC_LOW_POWER_5 5 Hz ACC_LOW_POWER_10 10 Hz \fP"
.ti -1c
.RI "enum \fBACC_OUTPUT_DATA_RATE\fP { \fBACC_ODR_50\fP = 0, \fBACC_ODR_100\fP = _BV(ACC_DR0), \fBACC_ODR_400\fP = _BV(ACC_DR1), \fBACC_ODR_1000\fP = _BV(ACC_DR1) | _BV(ACC_DR0) }"
.br
.RI "\fISpecifies the available Data Output Rates Output data rateLP Cut-off  ACC_ODR_50 50 Hz 37 Hz ACC_ODR_100 100 Hz 74 Hz ACC_ODR_400 400 Hz 292 Hz ACC_ODR_1000 1000 Hz 780 Hz \fP"
.ti -1c
.RI "enum \fBACC_High_Pass_CUT_OFF\fP { \fBACC_HPcoeff00\fP = 0, \fBACC_HPcoeff01\fP = _BV(ACC_HPCF0), \fBACC_HPcoeff10\fP = _BV(ACC_HPCF1), \fBACC_HPcoeff11\fP = _BV(ACC_HPCF1) | _BV(ACC_HPCF0) }"
.br
.RI "\fISpecifies the available High-pass filter cut-off frequency configuration 
.br
Look in datasheet page 24 for further information\&. \fP"
.ti -1c
.RI "enum \fBACC_FULL_SCALE\fP { \fBACC_6G\fP = 0, \fBACC_12G\fP = _BV(ACC_FS0), \fBACC_24G\fP = _BV(ACC_FS1) | _BV(ACC_FS0) }"
.br
.RI "\fISpecifies the available Full-scale selections 
.br
\&. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBacc_init\fP (uint8_t __cs_pin, \fBACC_POWER_MODE\fP __power_mode, \fBACC_OUTPUT_DATA_RATE\fP __output_data_rate, \fBACC_FULL_SCALE\fP __full_scale)"
.br
.RI "\fIInitializes the driver\&. \fP"
.ti -1c
.RI "void \fBacc_measure\fP (void)"
.br
.RI "\fIStarts one measure routine\&. \fP"
.ti -1c
.RI "double \fBacc_get_x_axis\fP (void)"
.br
.RI "\fIGets the latest measured x axis value\&. \fP"
.ti -1c
.RI "double \fBacc_get_y_axis\fP (void)"
.br
.RI "\fIGets the latest measured y axis value\&. \fP"
.ti -1c
.RI "double \fBacc_get_z_axis\fP (void)"
.br
.RI "\fIGets the latest measured z axis value\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBACC_FULL_SCALE\fP"

.PP
Specifies the available Full-scale selections 
.br
\&. 
.IP "\(bu" 2
ACC_6G : +-6g
.IP "\(bu" 2
ACC_12G : +-12g
.IP "\(bu" 2
ACC_24G : +-24g 
.PP

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIACC_6G \fP\fP
.TP
\fB\fIACC_12G \fP\fP
.TP
\fB\fIACC_24G \fP\fP
.PP
Definition at line 136 of file lis331hh\&.h\&.
.SS "enum \fBACC_High_Pass_CUT_OFF\fP"

.PP
Specifies the available High-pass filter cut-off frequency configuration 
.br
Look in datasheet page 24 for further information\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIACC_HPcoeff00 \fP\fP
.TP
\fB\fIACC_HPcoeff01 \fP\fP
.TP
\fB\fIACC_HPcoeff10 \fP\fP
.TP
\fB\fIACC_HPcoeff11 \fP\fP
.PP
Definition at line 121 of file lis331hh\&.h\&.
.SS "enum \fBACC_OUTPUT_DATA_RATE\fP"

.PP
Specifies the available Data Output Rates Output data rateLP Cut-off  ACC_ODR_50 50 Hz 37 Hz ACC_ODR_100 100 Hz 74 Hz ACC_ODR_400 400 Hz 292 Hz ACC_ODR_1000 1000 Hz 780 Hz 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIACC_ODR_50 \fP\fP
.TP
\fB\fIACC_ODR_100 \fP\fP
.TP
\fB\fIACC_ODR_400 \fP\fP
.TP
\fB\fIACC_ODR_1000 \fP\fP
.PP
Definition at line 109 of file lis331hh\&.h\&.
.SS "enum \fBACC_POWER_MODE\fP"

.PP
Specifies the available power modes Output data rate frq  ACC_POWER_DOWN --- ACC_NORMAL_MODE ODR ACC_LOW_POWER_0_5 0\&.5 Hz ACC_LOW_POWER_1 1 Hz ACC_LOW_POWER_2 2 Hz ACC_LOW_POWER_5 5 Hz ACC_LOW_POWER_10 10 Hz 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIACC_POWER_DOWN \fP\fP
.TP
\fB\fIACC_NORMAL_MODE \fP\fP
.TP
\fB\fIACC_LOW_POWER_0_5 \fP\fP
.TP
\fB\fIACC_LOW_POWER_1 \fP\fP
.TP
\fB\fIACC_LOW_POWER_2 \fP\fP
.TP
\fB\fIACC_LOW_POWER_5 \fP\fP
.TP
\fB\fIACC_LOW_POWER_10 \fP\fP
.PP
Definition at line 89 of file lis331hh\&.h\&.
.SH "Function Documentation"
.PP 
.SS "double acc_get_x_axis (void)"

.PP
Gets the latest measured x axis value\&. Returns the x axis value multiplied with the scale factor
.PP
\fBParameters:\fP
.RS 4
\fIvoid\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
double - the acceleration in g [N/Kg] Range: -1 < x < 1 
.RE
.PP

.PP
Definition at line 140 of file lis331hh\&.c\&.
.SS "double acc_get_y_axis (void)"

.PP
Gets the latest measured y axis value\&. Returns the y axis value multiplied with the scale factor
.PP
\fBParameters:\fP
.RS 4
\fIvoid\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
double - the acceleration in g [N/Kg] Range: -1 < x < 1 
.RE
.PP

.PP
Definition at line 148 of file lis331hh\&.c\&.
.SS "double acc_get_z_axis (void)"

.PP
Gets the latest measured z axis value\&. Returns the z axis value multiplied with the scale factor
.PP
\fBParameters:\fP
.RS 4
\fIvoid\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
double - the acceleration in g [N/Kg] Range: -1 < x < 1 
.RE
.PP

.PP
Definition at line 156 of file lis331hh\&.c\&.
.SS "void acc_init (uint8_t__cs_pin, \fBACC_POWER_MODE\fP__power_mode, \fBACC_OUTPUT_DATA_RATE\fP__output_data_rate, \fBACC_FULL_SCALE\fP__full_scale)"

.PP
Initializes the driver\&. Sets up the SPI and writes the setup parameters to the accelerometer chip Sending configuration data to the accelerometer using multi-write\&. index 0 : address and multiple byte data bit index 1-5 : data for the different control registers
.PP
: Further information can be found on pages 24-28 in the datasheet
.PP
\fBParameters:\fP
.RS 4
\fIuint8_t\fP __cs_pin - chip select pin 
.br
\fIACC_POWER_MODE\fP __power_mode - accelerometer power mode 
.br
\fIACC_OUTPUT_DATA_RATE\fP __output_data_rate - the rate the data is updated 
.br
\fIACC_FULL_SCALE\fP __full_scale - the full scale g measurement
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.PP
Definition at line 55 of file lis331hh\&.c\&.
.SS "void acc_measure (void)"

.PP
Starts one measure routine\&. Sends a command to the accelerometer with the information to allow multiple byte read 00110111
.PP
\fBParameters:\fP
.RS 4
\fIvoid\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.PP
Definition at line 100 of file lis331hh\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for VROOM from the source code\&.
